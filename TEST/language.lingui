LANGUAGE

    MainMenu

    Date day month year
        ( day ~ "/" ~ month ~ "/" ~ year )

    :Chests :count

    :Swords :count

    :NoSwords
        Swords( 0* )

    :OneSword
        Swords( 1* )

    TheItems :items

    TheItemsHaveBeenFound :items

    Dump :this
        "\"" ~ $this ~ "\" / \"" ~ *this ~ "\" / '" ~ ^this ~ "' / "
        if !this
            GetIntegerText( #this ) ~ " / "
        if .this
            GetRealText( %this ) ~ " / "

        GetPluralityText( @this ) ~ " / " ~ GetPluralityText( °this ) ~ " / " ~ GetGenreText( &this ) ~ "\n"

    TestFunctions
        GetIntegerText( -12 ) ~ " / " ~ GetRealText( -12.0, -1 ) ~ " / " ~ GetRealText( -12.0 ) ~ " / " ~ GetRealText( -12.0, 3 ) ~ " \n"
        GetRealText( -12.3, 3, 3, '_' ) ~ " / " ~ GetRealText( -12.345 ) ~ " / " ~ GetRealText( -12.3456789, 0, 3, DotCharacter ) ~ "\n"
        GetLowerCase( "jack SPARROW" ) ~ " / " ~ GetUpperCase( "john MCLANE" ) ~ "\n"
        GetSentenceCase( "jason bourne" ) ~ " / " ~ GetTitleCase( "james kirk" ) ~ "\n"

        Dump( MakeTranslation( "cm" ) )
        Dump( MakeTranslation( "cm", "0" ) )
        Dump( MakeTranslation( "cm", "1" ) )
        Dump( MakeTranslation( "cm", "2" ) )
        Dump( MakeTranslation( "cm", "-12.345" ) )
        Dump( MakeTranslation( "cm", "-12.345", male ) )
        Dump( MakeTranslation( 12 ) )
        Dump( MakeTranslation( 12, female ) )

        Dump( 3* )
        Dump( 4*"perros" )
        Dump( 5*"fiestas":female )
        Dump( 6.5* )
        Dump( 7.5*"metros" )
        Dump( 8.5*"vueltas":female )

        GetTranslation( "English" )
        " / "
        GetTranslation( "French" ).Text ~ "\n"

        Date( "18", "2", "2018" ) ~ "\n"

    :Kings :count
        $result = "reyes"
        *result = *count
        &result = male

    Test
        var :no_chests :one_chest
        no_chests = Chests( 0* )
        one_chest = Chests( 1* )

        TheItemsHaveBeenFound( no_chests )
        TheItemsHaveBeenFound( one_chest )
        TheItemsHaveBeenFound( Chests( 2* ) )
        TheItemsHaveBeenFound( NoSwords() )
        TheItemsHaveBeenFound( OneSword() )
        TheItemsHaveBeenFound( Swords( 2* ) )

        TestFunctions()

        var :kings :queens :princes
        kings = Kings( 1* )
        $queens = "reinas"
        *queens = "2"
        &queens = female
        princes = 3*"príncipes":male

        $kings ~ " " ~ $queens ~ " " ~ $princes ~ "\n"
